name: Deploy to GKE (Static)

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  PROJECT_ID: plenu-prod
  REGION: us-central1
  CLUSTER: plenu-cluster
  NAMESPACE: web
  DEPLOYMENT: plenu-web
  REPO: static-web
  IMAGE_NAME: plenu-web
  PUBLIC_SITE_URL: https://www.plenu.app

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install pnpm
        run: npm i -g pnpm@10

      - name: Install deps
        run: pnpm install --frozen-lockfile

      - name: Build Astro
        run: pnpm build
        env:
          PUBLIC_SITE_URL: ${{ env.PUBLIC_SITE_URL }}

      - name: Auth GCP (WIF)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WIF_PROVIDER || vars.WIF_PROVIDER }}
          service_account: github-deployer@plenu-prod.iam.gserviceaccount.com

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2

      - name: Install GKE auth plugin and kubectl (gcloud components)
        run: |
          gcloud --quiet components install gke-gcloud-auth-plugin kubectl

      - name: Enable GKE auth plugin env
        run: echo "USE_GKE_GCLOUD_AUTH_PLUGIN=True" >> $GITHUB_ENV

      - name: Build and push image with Cloud Build (faster inside GCP)
        run: |
          IMAGE="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"
          gcloud builds submit --tag "$IMAGE" .
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV

      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials ${{ env.CLUSTER }} --region ${{ env.REGION }} --project ${{ env.PROJECT_ID }}

      - name: Set image in Deployment
        run: |
          kubectl -n ${{ env.NAMESPACE }} set image deployment/${{ env.DEPLOYMENT }} nginx=$IMAGE
          kubectl -n ${{ env.NAMESPACE }} rollout status deployment/${{ env.DEPLOYMENT }}


