---
interface Props {
  title?: string;
  lang?: string;
  description?: string;
}
const { title = 'Plenu', lang = 'es', description = 'Adoptar hábitos es más fácil con Plenu' } = Astro.props as Props;
---
<html lang={lang} class="bg-bg text-[var(--color-text-primary)]">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="icon" type="image/png" href="/favicon.png" />
    <meta name="theme-color" content="#378560" />
    <meta name="robots" content="index,follow" />
    <meta name="description" content={description} />
    {(() => {
      const kwEs = 'hábitos, alimentación saludable, IA, menú semanal, lista de compras, calorías, macros, nutrición, app iOS, bienestar, plenu';
      const kwEn = 'habits, healthy eating, AI, weekly menu, grocery list, calories, macros, nutrition, iOS app, wellness, plenu';
      const keywords = lang === 'es' ? kwEs : kwEn;
      return <meta name="keywords" content={keywords} />;
    })()}
    <title>{title}</title>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet" />
    <link rel="preload" as="image" href="/banner_plenu_x2.png" />
    {(() => {
      const siteUrl = import.meta.env.PUBLIC_SITE_URL || '';
      const path = Astro.url?.pathname || '/';
      const canonical = siteUrl ? new URL(path, siteUrl).toString() : path;
      const otherLang = lang === 'es' ? 'en' : 'es';
      const altEs = siteUrl ? new URL('/es', siteUrl).toString() : '/es';
      const altEn = siteUrl ? new URL('/en', siteUrl).toString() : '/en';
      const xDefault = siteUrl ? new URL('/', siteUrl).toString() : '/';
      const locale = lang === 'es' ? 'es_ES' : 'en_US';
      const ogImagePath = '/banner_plenu_x2.png';
      const ogImage = siteUrl ? new URL(ogImagePath, siteUrl).toString() : ogImagePath;
      return (
        <>
          <link rel="canonical" href={canonical} />
          <link rel="alternate" hrefLang="es" href={altEs} />
          <link rel="alternate" hrefLang="en" href={altEn} />
          <link rel="alternate" hrefLang="x-default" href={xDefault} />

          <meta property="og:type" content="website" />
          <meta property="og:site_name" content="Plenu" />
          <meta property="og:title" content={title} />
          <meta property="og:description" content={description} />
          <meta property="og:url" content={canonical} />
          <meta property="og:locale" content={locale} />
          <meta property="og:image" content={ogImage} />
          <meta name="twitter:card" content="summary_large_image" />
          <meta name="twitter:title" content={title} />
          <meta name="twitter:description" content={description} />
          <meta name="twitter:image" content={ogImage} />
          <script type="application/ld+json" set:html={JSON.stringify({
            '@context': 'https://schema.org',
            '@type': 'Organization',
            name: 'Plenu',
            url: siteUrl || undefined,
            logo: siteUrl ? new URL('/logo_plenu.png', siteUrl).toString() : '/logo_plenu.png'
          })}></script>
          <script type="application/ld+json" set:html={JSON.stringify({
            '@context': 'https://schema.org',
            '@type': 'WebSite',
            name: 'Plenu',
            url: siteUrl || undefined,
            inLanguage: lang,
            potentialAction: {
              '@type': 'SearchAction',
              target: `${siteUrl || ''}/?q={search_term_string}`,
              'query-input': 'required name=search_term_string'
            }
          })}></script>
        </>
      );
    })()}
    <script type="module" src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"></script>
    <script nomodule src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.js"></script>

    <!-- Google tag (gtag.js) -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-L82NJECKXP"></script>
    <script type="module">
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);} // eslint-disable-line
      gtag('js', new Date());

      gtag('config', 'G-L82NJECKXP');
    </script>
  </head>
  <body>
    <slot />

    <div id="contact-modal" class="fixed inset-0 bg-black/50 hidden items-center justify-center z-[999] p-4">
      <div class="bg-white w-full max-w-md rounded-xl shadow-xl p-5 sm:p-6 md:p-8">
        <div class="relative">
          <h3 class="text-center text-xl sm:text-2xl font-semibold text-text-primary">Quiero probar Plenu</h3>
          <button id="contact-close" aria-label="Cerrar" class="absolute right-0 top-0 p-1 text-text-secondary hover:opacity-80">
            <ion-icon name="close-outline" class="text-[22px]"></ion-icon>
          </button>
        </div>
        <form id="contact-form" class="mt-4 space-y-3">
          <div>
            <label class="block text-sm text-text-secondary mb-1">Nombre</label>
            <input name="name" required class="w-full border border-border rounded-md px-3 h-10" />
          </div>
          <div>
            <label class="block text-sm text-text-secondary mb-1">Correo</label>
            <input type="email" name="email" required class="w-full border border-border rounded-md px-3 h-10" />
          </div>
          <div class="grid grid-cols-1 sm:grid-cols-2 gap-3">
            <div>
              <label class="block text-sm text-text-secondary mb-1">Teléfono (opcional)</label>
              <input type="tel" name="phone" class="w-full border border-border rounded-md px-3 h-10" />
            </div>
            <div>
              <label class="block text-sm text-text-secondary mb-1">País (opcional)</label>
              <input name="country" class="w-full border border-border rounded-md px-3 h-10" />
            </div>
          </div>
          <div>
            <label class="block text-sm text-text-secondary mb-1">¿Por qué te gustaría probar la app?</label>
            <textarea name="reason" rows="4" required class="w-full border border-border rounded-md px-3 py-2"></textarea>
          </div>
          <label class="flex items-center gap-2 text-sm text-text-secondary select-none">
            <input type="checkbox" name="marketing_opt_in" class="w-4 h-4 border border-border rounded" />
            Quiero recibir novedades y actualizaciones.
          </label>
          <div class="flex items-center justify-end gap-2 pt-2">
            <button type="button" id="contact-cancel" class="btn btn--md btn-gray">Cancelar</button>
            <button type="submit" class="btn btn--md btn-primary">Enviar</button>
          </div>
          <p id="contact-success" class="hidden text-[13px] text-green-600">¡Gracias! Te contactaremos pronto.</p>
          <p id="contact-error" class="hidden text-[13px] text-red-600">Ocurrió un error. Intenta nuevamente.</p>
        </form>
      </div>
    </div>

    <script>
      const modal = document.getElementById('contact-modal');
      const openers = document.querySelectorAll('a[href="#plan"], a[href="#cta"], .js-open-contact');
      const closeBtn = document.getElementById('contact-close');
      const cancelBtn = document.getElementById('contact-cancel');
      const form = document.getElementById('contact-form');
      const successMsg = document.getElementById('contact-success');
      const errorMsg = document.getElementById('contact-error');

      const openModal = (e) => {
        if (e) e.preventDefault();
        modal?.classList.remove('hidden');
        modal?.classList.add('flex');
      };
      const closeModal = () => {
        modal?.classList.add('hidden');
        modal?.classList.remove('flex');
      };
      openers.forEach((el) => el.addEventListener('click', openModal));
      closeBtn?.addEventListener('click', closeModal);
      cancelBtn?.addEventListener('click', closeModal);
      modal?.addEventListener('click', (e) => { if (e.target === modal) closeModal(); });

      async function submitContact(data){
        try{
          const payload = {
            name: data.get('name'),
            email: data.get('email'),
            reason: data.get('reason'),
            phone: data.get('phone') || '',
            country: data.get('country') || '',
            marketing_opt_in: data.get('marketing_opt_in') === 'on' ? 'yes' : 'no',
            locale: document.documentElement.lang || 'es',
            user_agent: navigator.userAgent,
            page: location.href,
            referrer: document.referrer || '',
            _cc: 'rodrigo@plenu.app',
            _subject: 'Nuevo lead desde plenu.app',
            _template: 'table'
          };
          const res = await fetch('https://formsubmit.co/ajax/marco@plenu.app', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json', 'Accept': 'application/json' },
            body: JSON.stringify(payload)
          });
          const body = await res.text();
          console.debug('FormSubmit response', { status: res.status, body: body.slice(0, 200) });
          if(!res.ok) throw new Error('FormSubmit error ' + res.status);
          return true;
        }catch(err){
          console.error('submitContact error', err);
          return false;
        }
      }

      form?.addEventListener('submit', async (e) => {
        e.preventDefault();
        successMsg?.classList.add('hidden');
        errorMsg?.classList.add('hidden');
        const submitBtn = form.querySelector('button[type="submit"]');
        submitBtn?.setAttribute('disabled', 'true');
        const ok = await submitContact(new FormData(form));
        submitBtn?.removeAttribute('disabled');
        if(ok){
          successMsg?.classList.remove('hidden');
          if (window.gtag) {
            window.gtag('event', 'lead_submit', {
              event_category: 'lead',
              event_label: document.documentElement.lang || 'es',
              value: 1
            });
          }
          form.reset();
          setTimeout(closeModal, 1200);
        }else{
          errorMsg?.classList.remove('hidden');
        }
      });
    </script>
  </body>
  <style is:global>
    @import '../styles/global.css';
  </style>
</html>


